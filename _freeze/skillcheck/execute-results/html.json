{
  "hash": "6fc075667a275dc10fcbf7c8117803e5",
  "result": {
    "markdown": "---\ntitle: \"Skill Check Comparison\"\nauthor: \"Tobias\"\n---\n\n\n\n\n\n\n## tl;dr\n\nI wrote this once already, then the IDE just... quit. Now I'm not inclined to repeat myself anytime soon. \\>=(\n\n# Checks from different Systems\n\nLet's take a look at some d6-based games and how they resolve their rolls:\n\n-   **Apocalypse World:** roll 2d6 and add their results; on a 10+ you succeed, on 7-9 you succeed but at a cost and on 6 or less you usually fail\n-   **Blades in the Dark:** roll several d6 (usually 1-4) based on your stats and take the single highest result; you succeed on a 6 and even gain some extra on two 6s (critical success), a 4 or 5 is a partial success similar to the above and on a 1-3 \"it's a bad outcome. Things go poorly. You probably don't achieve your goal and you suffer complications, too\"[^1]\n-   **Shadowrun:** you roll anything from 1 to 30 dice (usually about 3 to 12 though) and count all 5s, 6s (your successes) and 1s (if more than half of the rolled dice are 1s, you fail spectacularly); there are no baseline thresholds - sometimes you 'roll off' against the GM, sometimes there are rules to dictate the threshold and rather often the GM comes up with some arbitrary number you need to pass\n\n[^1]: quoted from https://bladesinthedark.com/core-system\n\nAdditionally there are ways to tinker with the results and alter the player's chances. In **AW** you sometimes flatly add (or substract) numbers to the result. **BitD** gives or takes dice to or from you and the same does **SR**, albeit with more dice.\n\nAs you can see, the first two examples are quite similar and pretty straight forward, whereas the third is a whole different kind of beast. This is why I'm writing this: I'll simulate the outcomes of the different approaches and try to find one that *feels shadowrun* but resolves in a distinct way like with the other two.\n\n## Additional Mechanics\n\nI guess? Idk yet.\n\n# Simulations\n\n\n\n\n\nThis is the interesting part. How do AW and BitD compare and how does SR fit in? I begin with sampling, oh let's just say, 2000 rolls - where 'a roll' is full skill check instead of single dice rolls. For simplicity, I only make 2000 rolls for each game once.\n\n\n::: {.cell .column-body}\n::: {.cell-output-display}\n![](skillcheck_files/figure-html/plot1-1.png){width=960}\n:::\n:::\n\n\nAs we can see, the results largely scale up the same, although in *Blades in the Dark* rolls are more forgiving than in *Apocalypse World*; out otherwise, the success rates in BitD are generally a little higher. This suits the general vibes of the games: in BitD, the consequences of failing are more dire overall, therefore it's kinda fair you don't fail too easy or often. Let's take a look at *Shadowrun*, though. First at the raw number of successes (5s and 6s) and then by setting some thresholds to shoehorn everything into three success qualities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsr_base <- map(1:16, ~roll_d6(., n_rolls, \"success\"))\nnames(sr_base) <- paste0(1:16, \"d6\")\nsr6 <- sr_base %>% \n  as_tibble() %>% \n  gather(dice, result) %>% \n  mutate(\n    dice_lab = factor(dice) |> fct_inorder(),\n    dice_n   = as.numeric(dice_lab),\n    result_neg = dice_n - result\n  )\n\nggplot(sr6, aes(dice_n, result)) +\n  # facet_wrap(~dice)\n  geom_jitter(width = .3, height = .3,\n              size = .1, alpha = .5)\n```\n\n::: {.cell-output-display}\n![](skillcheck_files/figure-html/sim_sr-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(sr6, aes(result)) +\n  facet_wrap(~dice_lab, nrow = 4) +\n  geom_histogram(binwidth = 1, color = \"#222222\") +\n  labs(\n    y = \"Number of rolls\", \n    x = \"Number of successes\"\n  )\n```\n\n::: {.cell-output-display}\n![](skillcheck_files/figure-html/sim_sr-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "skillcheck_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}