{
  "hash": "baad47dd63b76ed9ab9caaa20315474a",
  "result": {
    "markdown": "---\ntitle: \"sugr: data preparation\"\nsubtitle: \"Preparation of Continouos Glucose Measurements for usage in a shiny app\"\ncategories: [data cleaning, timeseries, medical, ETL]\nimage: \"thumbs/diabetic.jpg\"\nauthor: \"Tobias\"\ndate: \"04/16/2023\"\ndate-format: medium\n---\n\n\n::: tldr\n**tl;dr:** CGMs are a great source of (timeseries) data to tinker with. Here I describe the process of cleaning up and preparing the data of Medtronics systems in order to use it in a shiny app.\n:::\n\n\n\n\n\n# Abstract\n\nI'm a type I diabetic and therefore use an insulin pump and a connected CGM - continouos glucose measurement - system from Medtronic. The company kindly provides access to the raw data, even though only by the use of propriatory software and a web interface. This means I can't access the data through some sort of API to automate the collection thereof and have to run through that process manually on a regular basis.\n\nApart from that minor nuisance what's more important though is the fact that the data needs some touch-ups before you can actually use them:\n\n- data from the pump and the GCM sensor are basically two different datasets but kept in the same csv\n- while the time interval is 5 minutes (a reading from the GCM), not much else is going on otherwise\n- direct blood glucose measurements, insulin doses, etc. are delivered _whenever_ and not on-point of the 5min intervals\n\nHere I'll walk through the process of cleaning that up.\n\n# Reading the Raw Data\n\nFirst let's have a look at what we've got here. To save ourselves some headaches, I already put all the settings in all the places such that we get a nice tabular dataset. Most should be pretty self-explanatory: entries are delimited by a semicolon, the date format has to be sepcified and so on. I set `skip = 6` because, well, that's where the actual csv entries actually begin. Beforehand it's just some unstructured data about the device, patient, date of recordng, etc.\n\n::: {.panel-tabset}\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_raw <- read_delim(\"data/sugr/carelink-export-220217.csv\", \n                  delim = \";\", escape_double = FALSE, \n                  col_types = cols(Date = col_date(format = \"%Y/%m/%d\"), \n                                   Time = col_time(format = \"%H:%M:%S\")), \n                  locale = locale(decimal_mark = \",\"), \n                  trim_ws = TRUE, skip = 6)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...51`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n:::\n\n\n## Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(data_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 9,236\nColumns: 51\n$ Index                                 <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10…\n$ Date                                  <date> 2022-02-17, 2022-02-17, 2022-02…\n$ Time                                  <time> 11:07:38, 11:02:39, 11:00:00, 1…\n$ `New Device Time`                     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BG Source`                           <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BG Reading (mg/dL)`                  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Linked BG Meter ID`                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Basal Rate (U/h)`                    <dbl> NA, NA, 0.65, NA, NA, NA, NA, NA…\n$ `Temp Basal Amount`                   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Temp Basal Type`                     <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Temp Basal Duration (h:mm:ss)`       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Bolus Type`                          <chr> \"Normal\", \"Normal\", NA, \"Normal\"…\n$ `Bolus Volume Selected (U)`           <dbl> 0.03, 0.05, NA, 0.05, 0.03, 0.03…\n$ `Bolus Volume Delivered (U)`          <dbl> 0.03, 0.05, NA, 0.05, 0.03, 0.03…\n$ `Bolus Duration (h:mm:ss)`            <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Prime Type`                          <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Prime Volume Delivered (U)`          <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Alarm                                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Suspend                               <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Rewind                                <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Estimate (U)`                    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Target High BG (mg/dL)`          <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Target Low BG (mg/dL)`           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Carb Ratio (g/U)`                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Insulin Sensitivity (mg/dL/U)`   <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Carb Input (grams)`              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ BG Input (mg/dL)`                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Correction Estimate (U)`         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Food Estimate (U)`               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Active Insulin (U)`              <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Status`                          <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Sensor Calibration BG (mg/dL)`       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Sensor Glucose (mg/dL)`              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `ISIG Value`                          <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Event Marker`                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Bolus Number`                        <dbl> 236, 235, NA, 234, 233, 232, 231…\n$ `Bolus Cancellation Reason`           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `BWZ Unabsorbed Insulin Total (U)`    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Final Bolus Estimate`                <dbl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Scroll Step Size`                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Insulin Action Curve Time`           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Sensor Calibration Rejected Reason`  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Preset Bolus`                        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Bolus Source`                        <chr> \"CLOSED_LOOP_MICRO_BOLUS\", \"CLOS…\n$ `BLE Network Device`                  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Network Device Associated Reason`    <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Network Device Disassociated Reason` <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Network Device Disconnected Reason`  <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Sensor Exception`                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Preset Temp Basal Name`              <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ...51                                 <lgl> NA, NA, NA, NA, NA, NA, NA, NA, …\n```\n:::\n:::\n\n\n## Warning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproblems(data_raw) %>% select(-file) %>% print(n = 120)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 112 × 4\n      row   col expected           actual                             \n    <int> <int> <chr>              <chr>                              \n  1   115    41 1/0/T/F/TRUE/FALSE 240                                \n  2   493    22 1/0/T/F/TRUE/FALSE 120                                \n  3   493    23 1/0/T/F/TRUE/FALSE 90                                 \n  4   493    25 1/0/T/F/TRUE/FALSE 40                                 \n  5   493    30 1/0/T/F/TRUE/FALSE 2,10                               \n  6   505    22 1/0/T/F/TRUE/FALSE 120                                \n  7   505    23 1/0/T/F/TRUE/FALSE 90                                 \n  8   505    25 1/0/T/F/TRUE/FALSE 40                                 \n  9   505    30 1/0/T/F/TRUE/FALSE 0,0                                \n 10   922    22 1/0/T/F/TRUE/FALSE 120                                \n 11   922    23 1/0/T/F/TRUE/FALSE 90                                 \n 12   922    25 1/0/T/F/TRUE/FALSE 40                                 \n 13   922    30 1/0/T/F/TRUE/FALSE 0,20                               \n 14   933    22 1/0/T/F/TRUE/FALSE 160                                \n 15   933    23 1/0/T/F/TRUE/FALSE 120                                \n 16   933    25 1/0/T/F/TRUE/FALSE 40                                 \n 17   933    30 1/0/T/F/TRUE/FALSE 4,20                               \n 18   937    22 1/0/T/F/TRUE/FALSE 160                                \n 19   937    23 1/0/T/F/TRUE/FALSE 120                                \n 20   937    25 1/0/T/F/TRUE/FALSE 40                                 \n 21   937    30 1/0/T/F/TRUE/FALSE 3,10                               \n 22   944    22 1/0/T/F/TRUE/FALSE 160                                \n 23   944    23 1/0/T/F/TRUE/FALSE 120                                \n 24   944    25 1/0/T/F/TRUE/FALSE 40                                 \n 25   944    30 1/0/T/F/TRUE/FALSE 2,40                               \n 26   955    22 1/0/T/F/TRUE/FALSE 120                                \n 27   955    23 1/0/T/F/TRUE/FALSE 90                                 \n 28   955    25 1/0/T/F/TRUE/FALSE 40                                 \n 29   955    30 1/0/T/F/TRUE/FALSE 0,20                               \n 30   981    48 1/0/T/F/TRUE/FALSE USER_INITIATED                     \n 31  1002    22 1/0/T/F/TRUE/FALSE 120                                \n 32  1002    23 1/0/T/F/TRUE/FALSE 90                                 \n 33  1002    25 1/0/T/F/TRUE/FALSE 40                                 \n 34  1002    30 1/0/T/F/TRUE/FALSE 0,0                                \n 35  1417    20 1/0/T/F/TRUE/FALSE Rewind                             \n 36  2715    22 1/0/T/F/TRUE/FALSE 120                                \n 37  2715    23 1/0/T/F/TRUE/FALSE 90                                 \n 38  2715    25 1/0/T/F/TRUE/FALSE 40                                 \n 39  2715    30 1/0/T/F/TRUE/FALSE 1,30                               \n 40  2726    22 1/0/T/F/TRUE/FALSE 120                                \n 41  2726    23 1/0/T/F/TRUE/FALSE 90                                 \n 42  2726    25 1/0/T/F/TRUE/FALSE 40                                 \n 43  2726    30 1/0/T/F/TRUE/FALSE 0,0                                \n 44  2746    22 1/0/T/F/TRUE/FALSE 140                                \n 45  2746    23 1/0/T/F/TRUE/FALSE 90                                 \n 46  2746    25 1/0/T/F/TRUE/FALSE 40                                 \n 47  2746    30 1/0/T/F/TRUE/FALSE 0,80                               \n 48  2760    22 1/0/T/F/TRUE/FALSE 120                                \n 49  2760    23 1/0/T/F/TRUE/FALSE 90                                 \n 50  2760    25 1/0/T/F/TRUE/FALSE 40                                 \n 51  2760    30 1/0/T/F/TRUE/FALSE 5,10                               \n 52  2762    22 1/0/T/F/TRUE/FALSE 120                                \n 53  2762    23 1/0/T/F/TRUE/FALSE 90                                 \n 54  2762    25 1/0/T/F/TRUE/FALSE 40                                 \n 55  2762    30 1/0/T/F/TRUE/FALSE 5,10                               \n 56  2768    22 1/0/T/F/TRUE/FALSE 140                                \n 57  2768    23 1/0/T/F/TRUE/FALSE 90                                 \n 58  2768    25 1/0/T/F/TRUE/FALSE 40                                 \n 59  2768    30 1/0/T/F/TRUE/FALSE 4,80                               \n 60  2772    22 1/0/T/F/TRUE/FALSE 140                                \n 61  2772    23 1/0/T/F/TRUE/FALSE 90                                 \n 62  2772    25 1/0/T/F/TRUE/FALSE 40                                 \n 63  2772    30 1/0/T/F/TRUE/FALSE 0,0                                \n 64  2779    48 1/0/T/F/TRUE/FALSE USER_INITIATED                     \n 65  2955    37 1/0/T/F/TRUE/FALSE User Request                       \n 66  3286    20 1/0/T/F/TRUE/FALSE Rewind                             \n 67  3321    37 1/0/T/F/TRUE/FALSE User Request                       \n 68  3806    37 1/0/T/F/TRUE/FALSE User Request                       \n 69  4338     1 a double           -------                            \n 70  4338     2 date like %Y/%m/%d MiniMed 670G MMT-1781              \n 71  4338     3 time like %H:%M:%S Sensor                             \n 72  4338     4 1/0/T/F/TRUE/FALSE NG2307024H                         \n 73  4338     5 51 columns         5 columns                          \n 74  4339     1 a double           Index                              \n 75  4339     2 date like %Y/%m/%d Date                               \n 76  4339     3 time like %H:%M:%S Time                               \n 77  4339     4 1/0/T/F/TRUE/FALSE New Device Time                    \n 78  4339     6 a double           BG Reading (mg/dL)                 \n 79  4339     8 a double           Basal Rate (U/h)                   \n 80  4339     9 1/0/T/F/TRUE/FALSE Temp Basal Amount                  \n 81  4339    10 1/0/T/F/TRUE/FALSE Temp Basal Type                    \n 82  4339    11 1/0/T/F/TRUE/FALSE Temp Basal Duration (h:mm:ss)      \n 83  4339    13 a double           Bolus Volume Selected (U)          \n 84  4339    14 a double           Bolus Volume Delivered (U)         \n 85  4339    15 1/0/T/F/TRUE/FALSE Bolus Duration (h:mm:ss)           \n 86  4339    17 a double           Prime Volume Delivered (U)         \n 87  4339    20 1/0/T/F/TRUE/FALSE Rewind                             \n 88  4339    21 a double           BWZ Estimate (U)                   \n 89  4339    22 1/0/T/F/TRUE/FALSE BWZ Target High BG (mg/dL)         \n 90  4339    23 1/0/T/F/TRUE/FALSE BWZ Target Low BG (mg/dL)          \n 91  4339    24 a double           BWZ Carb Ratio (g/U)               \n 92  4339    25 1/0/T/F/TRUE/FALSE BWZ Insulin Sensitivity (mg/dL/U)  \n 93  4339    26 a double           BWZ Carb Input (grams)             \n 94  4339    27 a double           BWZ BG Input (mg/dL)               \n 95  4339    28 a double           BWZ Correction Estimate (U)        \n 96  4339    29 a double           BWZ Food Estimate (U)              \n 97  4339    30 1/0/T/F/TRUE/FALSE BWZ Active Insulin (U)             \n 98  4339    32 a double           Sensor Calibration BG (mg/dL)      \n 99  4339    33 a double           Sensor Glucose (mg/dL)             \n100  4339    34 a double           ISIG Value                         \n101  4339    36 a double           Bolus Number                       \n102  4339    37 1/0/T/F/TRUE/FALSE Bolus Cancellation Reason          \n103  4339    38 a double           BWZ Unabsorbed Insulin Total (U)   \n104  4339    39 a double           Final Bolus Estimate               \n105  4339    41 1/0/T/F/TRUE/FALSE Insulin Action Curve Time          \n106  4339    42 1/0/T/F/TRUE/FALSE Sensor Calibration Rejected Reason \n107  4339    43 1/0/T/F/TRUE/FALSE Preset Bolus                       \n108  4339    45 1/0/T/F/TRUE/FALSE BLE Network Device                 \n109  4339    46 1/0/T/F/TRUE/FALSE Network Device Associated Reason   \n110  4339    47 1/0/T/F/TRUE/FALSE Network Device Disassociated Reason\n111  4339    48 1/0/T/F/TRUE/FALSE Network Device Disconnected Reason \n112  4339    50 1/0/T/F/TRUE/FALSE Preset Temp Basal Name             \n```\n:::\n:::\n\n:::\n\nOkay, so, a **Warning**. What's that about?\n\nAlright, the first ~70ish are actual parsing errors that lead to empty cells. Not great, but also no entries of huge importance^[mostly hard-coded things like ratios or target values that change slightly during a day but stay the same across all days], as far as I can tell. The rest though result from the circumstance that the file is basically seperated in CGM sensor data and insulin pump data, as mentioned in the beginning. Luckily though, `readr`/`vroom` just ignores the two rows where the new table begins - a device description and exactly same column names in the same order as before - and just continues parsing the CGM data. Let's take a look at those whopping 51 Variables:\n\n\nLooks pretty decent already. That's a whole lotta `<NA>`s, though. We'll have to look into that in another article.\n\n# The Clean-up Procedure\n\nHere's what needs to be done still:\n\n- clean up the column names\n- throw out the variables we don't need (spoiler: most of them)\n- `time` precision by minutes should suffice\n- a combined `datetime` column would be nice\n- a column of weekdays, too, just for some quality of life improvement\n\nIt also totally makes sense to split pump from CGM data, of course. Since both are structurally identical, though, we'll do that after the clean-up. At this point, we're also only interested in variables that directly deal with glucose measurements, insulin dosage and carbohydrate intake^[other variables contain aforementioned \"hard codings\" or diagnostics on device usage such as low battery warnings]. \n\n## Codebook\n\nThe variables of interest are:\n\n::: {.fullwidth}\n\nVariable | Renamed to | Description\n---------|------------|------------------------------------------------\n`Index`  | `index`    | kinda self-explanatory\n`Date`   | `date`     | Year-Month-Day\n`Time`   | `time`     | hh:mm:ss\n`BG Reading (mg/dL)`          | `bg_direct` | a **direct** measurement of blood, usually by pricking a finger\n`Sensor Glucose (mg/dL)`      | `bg_sensor` | an _indirect_ measurement of interstitial fluid by the gcm sensor\n`Basal Rate (U/h)`            | `basal_rate` | the hourly rate of insulin given (in 'Units'; roughly 100U/ml)\n`BWZ BG Input (mg/dL)`        | `wiz_bg`    | blood glucose level (manual input)\n`BWZ Carb Input (grams)`      | `wiz_carbs` | carbohydrates (manual input)\n`BWZ Carb Ratio (g/U)`        | `wiz_ratio` | ratio of carbs per unit of insulin\n`BWZ Correction Estimate (U)` | `wiz_est_correction` | insulin to deliver to correct for too high bg level\n`BWZ Food Estimate (U)`       | `wiz_est_food`    | insulin units to deliver for the amount of carbohydrates (carbs / ratio)\n`BWZ Unabsorbed Insulin Total (U)` | `wiz_est_unabsorbed` | insulin to _not_ deliver in order to not overcompensate\n`Final Bolus Estimate`        | `bolus_final`     | amount of insulin to deliver\n`Bolus Volume Delivered (U)`  | `bolus_delivered` | the actual amount of insulin delivered\n\n:::\n\n## Cleaning and Variable Selection\n\nTo clean up column names, we could of course use some convenient helper function like `clean_names()` from the `janitor` package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\njanitor::clean_names(data_raw) %>% names() %>% sort()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"alarm\"                               \"basal_rate_u_h\"                     \n [3] \"bg_reading_mg_d_l\"                   \"bg_source\"                          \n [5] \"ble_network_device\"                  \"bolus_cancellation_reason\"          \n [7] \"bolus_duration_h_mm_ss\"              \"bolus_number\"                       \n [9] \"bolus_source\"                        \"bolus_type\"                         \n[11] \"bolus_volume_delivered_u\"            \"bolus_volume_selected_u\"            \n[13] \"bwz_active_insulin_u\"                \"bwz_bg_input_mg_d_l\"                \n[15] \"bwz_carb_input_grams\"                \"bwz_carb_ratio_g_u\"                 \n[17] \"bwz_correction_estimate_u\"           \"bwz_estimate_u\"                     \n[19] \"bwz_food_estimate_u\"                 \"bwz_insulin_sensitivity_mg_d_l_u\"   \n[21] \"bwz_status\"                          \"bwz_target_high_bg_mg_d_l\"          \n[23] \"bwz_target_low_bg_mg_d_l\"            \"bwz_unabsorbed_insulin_total_u\"     \n[25] \"date\"                                \"event_marker\"                       \n[27] \"final_bolus_estimate\"                \"index\"                              \n[29] \"insulin_action_curve_time\"           \"isig_value\"                         \n[31] \"linked_bg_meter_id\"                  \"network_device_associated_reason\"   \n[33] \"network_device_disassociated_reason\" \"network_device_disconnected_reason\" \n[35] \"new_device_time\"                     \"preset_bolus\"                       \n[37] \"preset_temp_basal_name\"              \"prime_type\"                         \n[39] \"prime_volume_delivered_u\"            \"rewind\"                             \n[41] \"scroll_step_size\"                    \"sensor_calibration_bg_mg_d_l\"       \n[43] \"sensor_calibration_rejected_reason\"  \"sensor_exception\"                   \n[45] \"sensor_glucose_mg_d_l\"               \"suspend\"                            \n[47] \"temp_basal_amount\"                   \"temp_basal_duration_h_mm_ss\"        \n[49] \"temp_basal_type\"                     \"time\"                               \n[51] \"x51\"                                \n```\n:::\n:::\n\n\nAs you can see, that does indeed make them \"workable\", but it's still pretty convoluted and even occasionally confusing. Therefore, in a second step, we do some touch-ups manually and get rid of all the columns we're not interested in. And since we're already at it, why not tick off the rest of the items on our list, too?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_full <- data_raw %>% \n  janitor::clean_names() %>% \n  transmute(\n    index = index,\n    datetime = round_date(ymd_hms(paste(date, time)), unit = \"minute\"),\n    date  = date,\n    wday  = wday(date, label = TRUE, week_start = 1),\n    time  = time,\n    basal_rate = basal_rate_u_h,\n    bg_direct  = bg_reading_mg_d_l,\n    bg_sensor  = sensor_glucose_mg_d_l,\n    wiz_ratio = bwz_carb_ratio_g_u,\n    wiz_carbs = bwz_carb_input_grams,\n    wiz_bg = bwz_bg_input_mg_d_l,\n    wiz_est_correction = bwz_correction_estimate_u,\n    wiz_est_food = bwz_food_estimate_u,\n    wiz_est_unabsorbed = bwz_unabsorbed_insulin_total_u,\n    bolus_final = final_bolus_estimate, \n    bolus_delivered = bolus_volume_delivered_u\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `transmute()`.\nℹ In argument: `datetime = round_date(ymd_hms(paste(date, time)), unit =\n  \"minute\")`.\nCaused by warning:\n!  2 failed to parse.\n```\n:::\n:::\n\n\n## \n\nAnother **Warning**, this time a parsing failure? Most certainly either when calling for the weekday labels or concoctenating and rounding the datetime:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanyNA(data_full$wday)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\ndata_full %>% \n  filter(is.na(wday)) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2\nColumns: 16\n$ index              <dbl> NA, NA\n$ datetime           <dttm> NA, NA\n$ date               <date> NA, NA\n$ wday               <ord> NA, NA\n$ time               <time> NA, NA\n$ basal_rate         <dbl> NA, NA\n$ bg_direct          <dbl> NA, NA\n$ bg_sensor          <dbl> NA, NA\n$ wiz_ratio          <dbl> NA, NA\n$ wiz_carbs          <dbl> NA, NA\n$ wiz_bg             <dbl> NA, NA\n$ wiz_est_correction <dbl> NA, NA\n$ wiz_est_food       <dbl> NA, NA\n$ wiz_est_unabsorbed <dbl> NA, NA\n$ bolus_final        <dbl> NA, NA\n$ bolus_delivered    <dbl> NA, NA\n```\n:::\n:::\n\n\nTwo completely empty rows alright. Since even the `index` column is empty, it's probably just an artefact of the \"two datasets in one file issue\". We better check that out, too, though.\n\n::: {.panel-tabset}\n\n## Find Suspects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanyNA(data_raw$Index)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nwhich(is.na(data_raw$Index))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4337 4338\n```\n:::\n:::\n\n\n## Glimpse\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_raw[4336:4339, ] %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4\nColumns: 51\n$ Index                                 <dbl> 4335, NA, NA, 4336\n$ Date                                  <date> 2022-01-30, NA, NA, 2022-02-17\n$ Time                                  <time> 23:50:04,       NA,       NA, 11…\n$ `New Device Time`                     <lgl> NA, NA, NA, NA\n$ `BG Source`                           <chr> NA, \"-------\", \"BG Source\", NA\n$ `BG Reading (mg/dL)`                  <dbl> NA, NA, NA, NA\n$ `Linked BG Meter ID`                  <chr> NA, NA, \"Linked BG Meter ID\", NA\n$ `Basal Rate (U/h)`                    <dbl> NA, NA, NA, NA\n$ `Temp Basal Amount`                   <lgl> NA, NA, NA, NA\n$ `Temp Basal Type`                     <lgl> NA, NA, NA, NA\n$ `Temp Basal Duration (h:mm:ss)`       <lgl> NA, NA, NA, NA\n$ `Bolus Type`                          <chr> NA, NA, \"Bolus Type\", NA\n$ `Bolus Volume Selected (U)`           <dbl> NA, NA, NA, NA\n$ `Bolus Volume Delivered (U)`          <dbl> NA, NA, NA, NA\n$ `Bolus Duration (h:mm:ss)`            <lgl> NA, NA, NA, NA\n$ `Prime Type`                          <chr> NA, NA, \"Prime Type\", NA\n$ `Prime Volume Delivered (U)`          <dbl> NA, NA, NA, NA\n$ Alarm                                 <chr> NA, NA, \"Alarm\", NA\n$ Suspend                               <chr> NA, NA, \"Suspend\", NA\n$ Rewind                                <lgl> NA, NA, NA, NA\n$ `BWZ Estimate (U)`                    <dbl> NA, NA, NA, NA\n$ `BWZ Target High BG (mg/dL)`          <lgl> NA, NA, NA, NA\n$ `BWZ Target Low BG (mg/dL)`           <lgl> NA, NA, NA, NA\n$ `BWZ Carb Ratio (g/U)`                <dbl> NA, NA, NA, NA\n$ `BWZ Insulin Sensitivity (mg/dL/U)`   <lgl> NA, NA, NA, NA\n$ `BWZ Carb Input (grams)`              <dbl> NA, NA, NA, NA\n$ `BWZ BG Input (mg/dL)`                <dbl> NA, NA, NA, NA\n$ `BWZ Correction Estimate (U)`         <dbl> NA, NA, NA, NA\n$ `BWZ Food Estimate (U)`               <dbl> NA, NA, NA, NA\n$ `BWZ Active Insulin (U)`              <lgl> NA, NA, NA, NA\n$ `BWZ Status`                          <chr> NA, NA, \"BWZ Status\", NA\n$ `Sensor Calibration BG (mg/dL)`       <dbl> NA, NA, NA, NA\n$ `Sensor Glucose (mg/dL)`              <dbl> NA, NA, NA, 122\n$ `ISIG Value`                          <dbl> NA, NA, NA, 23.9\n$ `Event Marker`                        <chr> NA, NA, \"Event Marker\", NA\n$ `Bolus Number`                        <dbl> NA, NA, NA, NA\n$ `Bolus Cancellation Reason`           <lgl> NA, NA, NA, NA\n$ `BWZ Unabsorbed Insulin Total (U)`    <dbl> NA, NA, NA, NA\n$ `Final Bolus Estimate`                <dbl> NA, NA, NA, NA\n$ `Scroll Step Size`                    <chr> NA, NA, \"Scroll Step Size\", NA\n$ `Insulin Action Curve Time`           <lgl> NA, NA, NA, NA\n$ `Sensor Calibration Rejected Reason`  <lgl> NA, NA, NA, NA\n$ `Preset Bolus`                        <lgl> NA, NA, NA, NA\n$ `Bolus Source`                        <chr> NA, NA, \"Bolus Source\", NA\n$ `BLE Network Device`                  <lgl> NA, NA, NA, NA\n$ `Network Device Associated Reason`    <lgl> NA, NA, NA, NA\n$ `Network Device Disassociated Reason` <lgl> NA, NA, NA, NA\n$ `Network Device Disconnected Reason`  <lgl> NA, NA, NA, NA\n$ `Sensor Exception`                    <chr> NA, NA, \"Sensor Exception\", NA\n$ `Preset Temp Basal Name`              <lgl> NA, NA, NA, NA\n$ ...51                                 <lgl> NA, NA, NA, NA\n```\n:::\n:::\n\n\n:::\n\nThat confirms it. Actually, we should throw those lines out right at the beginning of the process.\n\n\n## Wrap-Up\n\nDoing it all in one go might then look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_full <- read_delim(\"data/sugr/carelink-export-220217.csv\", \n                  delim = \";\", escape_double = FALSE, \n                  col_types = cols(Date = col_date(format = \"%Y/%m/%d\"), \n                                   Time = col_time(format = \"%H:%M:%S\")), \n                  locale = locale(decimal_mark = \",\"), \n                  trim_ws = TRUE, skip = 6) %>% \n  janitor::clean_names() %>% \n  filter(!is.na(index)) %>% \n  transmute(\n    index              = index,\n    datetime_rounded   = round_date(ymd_hms(paste(date, time)), unit = \"minute\"),\n    datetime           = ymd_hms(paste(date, time)),\n    date               = date,\n    wday               = wday(date, label = TRUE, week_start = 1),\n    time               = time,\n    basal_rate         = basal_rate_u_h,\n    bg_direct          = bg_reading_mg_d_l,\n    bg_sensor          = sensor_glucose_mg_d_l,\n    wiz_ratio          = bwz_carb_ratio_g_u,\n    wiz_carbs          = bwz_carb_input_grams,\n    wiz_bg             = bwz_bg_input_mg_d_l,\n    wiz_est_correction = bwz_correction_estimate_u,\n    wiz_est_food       = bwz_food_estimate_u,\n    wiz_est_unabsorbed = bwz_unabsorbed_insulin_total_u,\n    bolus_final        = final_bolus_estimate, \n    bolus_delivered    = bolus_volume_delivered_u\n  )\n```\n:::\n\n\n\n# Splitting CGM & Pump Data\n\nNow that the whole thing is cleaned up the only thing left to do is splitting pump and sensor data into seperate dataframes. We could of course leave it as is, but a split brings some advantages. The CGM is not in sync with the (semi-manual) pump data; while the former happens very much exactly every 5 minutes^[with an unspecific shift happening once a week whenever the sensor has to be replaced], the latter just happens whenever. Additionally, at the initial reading of the data we already noticed the - professionally speaking - sheer insane amount of `NA`s, which we can drastically reduced by the split. When we color every cell of the data by whether it contains a value or not, it looks like this:\n\n\n::: {.cell .column-body}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata_full %>% \n    map_df(is.na) %>% \n    map_df(function(.){ifelse(., \"<NA>\", \"not <NA>\")}) %>% \n    mutate(row_num = length(index) - seq_along(index)) %>% \n    pivot_longer(cols = -row_num,\n                 names_to = \"col\", \n                 names_transform = as_factor,\n                 values_to = \"na\") %>% \n  ggplot(aes(col, row_num, fill = na)) +\n    geom_tile(height = .95, width = .95, alpha = .8) +\n    scale_fill_manual(values = c(\"#ff3300\",\"#00cc00\")) +\n    theme(legend.position = \"top\",\n          legend.title = element_blank(),\n          axis.text.x  = element_blank(),\n          axis.text.y  = element_blank(),\n          axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](sugr-prep_files/figure-html/b3_viz_na-1.png){width=960}\n:::\n:::\n\n\nThat's a lot of unused tabular real estate, what a waste... We can clearly see where pump data ends and CGM data begins, though. The 'green block' on the left hand side naturally consists of the timedate and indexing columns. We can also see that there are still otherwise empty rows in the lower part (the CGM data). There are two approaches by which to split the thing: (1) simply `filter` the `bg_sensor` column by checking for `NA` values and conveniently drop the empty CGM rows, too, or (2) use the previously identified index-row, such that those empty rows are kept and can be used to further investigate whats going on there^[Actually, a third possibility is the extraction of only those empty rows within the CGM block, but losing the context in which they appear is not very practical.]. For the sake of thoroughness, let's go with Option 2, have a look at what's going on there and possibly remove those empty rows later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncutoff_idx <- data_full$index[min(which(!is.na(data_full$bg_sensor)))]\n\ncgm <- data_full %>% \n  filter(index > cutoff_idx) %>% \n  select(index, datetime, date, wday, time, bg_sensor)\n\npump <- data_full %>% \n  filter(index <= cutoff_idx) %>% \n  select(-bg_sensor)\n```\n:::\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ncgm %>% \n  map_df(is.na) %>% \n  map_df(function(.){ifelse(., \"<NA>\", \"not <NA>\")}) %>% \n    mutate(row_num = length(index) - seq_along(index)) %>% \n    pivot_longer(cols = -row_num,\n                 names_to = \"col\", \n                 names_transform = as_factor,\n                 values_to = \"na\") %>% \n  ggplot(aes(col, row_num, fill = na)) +\n    geom_tile(height = .95, width = .95, alpha = .8) +\n    scale_fill_manual(values = c(\"#ff3300\",\"#00cc00\")) +\n    theme(legend.position = \"none\",\n          legend.title = element_blank(),\n          axis.text.x  = element_blank(),\n          axis.text.y  = element_blank(),\n          axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![CGM Data](sugr-prep_files/figure-html/b3_split_plot-1.png){width=960}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\npump %>% \n  map_df(is.na) %>% \n  map_df(function(.){ifelse(., \"<NA>\", \"not <NA>\")}) %>% \n    mutate(row_num = length(index) - seq_along(index)) %>% \n    pivot_longer(cols = -row_num,\n                 names_to = \"col\", \n                 names_transform = as_factor,\n                 values_to = \"na\") %>% \n  ggplot(aes(col, row_num, fill = na)) +\n    geom_tile(height = .95, width = .95, alpha = .8) +\n    scale_fill_manual(values = c(\"#ff3300\",\"#00cc00\")) +\n    theme(legend.position = \"none\",\n          legend.title = element_blank(),\n          axis.text.x  = element_blank(),\n          axis.text.y  = element_blank(),\n          axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![Pump Data](sugr-prep_files/figure-html/b3_split_plot-2.png){width=960}\n:::\n:::\n\n\nWell, better. There's still room for improvement, especially regarding the pump data: Lots of small bolus deliveries (the last column) not accompanied by any other action, which we could further split up, for example. Doing so is mainly a matter of iterating on the steps we've taken so far and at this point we're already in a good position from which we one can start further exploration and analysis of the data. The initial clean- and split-up procedure can therefore be considered concluded. Cheers!\n\n<!-- \n\n::: {.cell}\n\n```{.r .cell-code}\nwiz <- pump %>% \n  select(-bolus_delivered) %>% \n  filter(!if_all(basal_rate:bolus_final, is.na))\n\nbolus <- pump %>% \n  select(index:time, bolus_delivered) %>% \n  filter(!is.na(bolus_delivered))\n```\n:::\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nwiz %>% \n  map_df(is.na) %>% \n  map_df(function(.){ifelse(., \"<NA>\", \"not <NA>\")}) %>% \n    mutate(row_num = length(index) - seq_along(index)) %>% \n    pivot_longer(cols = -row_num,\n                 names_to = \"col\", \n                 names_transform = as_factor,\n                 values_to = \"na\") %>% \n  ggplot(aes(col, row_num, fill = na)) +\n    geom_tile(height = .95, width = .95, alpha = .8) +\n    scale_fill_manual(values = c(\"#ff3300\",\"#00cc00\")) +\n    theme(legend.position = \"none\",\n          legend.title = element_blank(),\n          axis.text.x  = element_blank(),\n          axis.text.y  = element_blank(),\n          axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![Wizard Data](sugr-prep_files/figure-html/b3_splitterer_plot-1.png){width=960}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nbolus %>% \n  map_df(is.na) %>% \n  map_df(function(.){ifelse(., \"<NA>\", \"not <NA>\")}) %>% \n    mutate(row_num = length(index) - seq_along(index)) %>% \n    pivot_longer(cols = -row_num,\n                 names_to = \"col\", \n                 names_transform = as_factor,\n                 values_to = \"na\") %>% \n  ggplot(aes(col, row_num, fill = na)) +\n    geom_tile(height = .95, width = .95, alpha = .8) +\n    scale_fill_manual(values = c(\"#00cc00\", \"#ff3300\")) +\n    theme(legend.position = \"none\",\n          legend.title = element_blank(),\n          axis.text.x  = element_blank(),\n          axis.text.y  = element_blank(),\n          axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![Bolus Delivery Data](sugr-prep_files/figure-html/b3_splitterer_plot-2.png){width=960}\n:::\n:::\n\n-->\n",
    "supporting": [
      "sugr-prep_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}